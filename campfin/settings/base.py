"""
Django settings for campfin project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

from datetime import datetime
from requests_aws4auth import AWS4Auth

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=$c4^&-i0_b-g6=xzxy+(##e_540o6(5ra0zaq%g2)c%f##8jl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'django.contrib.humanize',
    'haystack',
    'campfin_data'
]

MIDDLEWARE_CLASSES = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'
]

ROOT_URLCONF = 'campfin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            ],
        },
    },
]

WSGI_APPLICATION = 'campfin.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {    
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'campfin_db',
        'USER' : os.environ.get('CAMPFIN_DB_USER', ''),
        'PASSWORD' : os.environ.get('CAMPFIN_DB_PASS', ''),
        'HOST' : 'campfin.cbbe3r361jr3.us-west-2.rds.amazonaws.com',
        'PORT' : '5432',
    }
}



# Search
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.solr_backend.SolrEngine',
        'URL': 'http://127.0.0.1:8983/solr'
    },
}



# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Pacific'

USE_I18N = True

USE_L10N = True

USE_TZ = True

USE_THOUSAND_SEPARATOR = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': '%(process)d %(asctime)s %(levelname)s %(module)s %(funcName)s %(lineno)d %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/home/ubuntu/logs/worker.log',
            'formatter': 'standard'
        },
    },
    'loggers': {
        '': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/tmp/static'

# Access control
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

# App-specific settings
DATA_DIR = os.path.join('/', 'data')
GEO_DATA_DIR = os.path.join(DATA_DIR, 'shapefiles')
SOS_BALLOTS_DIR = os.path.join(DATA_DIR, 'sos_ballots')
PDC_SCRAPED_DIR = os.path.join(DATA_DIR, 'pdc_scraped_data')

LOCAL_GEOCODER_URL = 'http://localhost/'
GEOCODE_CONFIDENCE_MAX = 80

SOUND_TRANSIT_CONTRACTS_GOOGLE_SHEET_ID = '1TlyvNAgjDSe7OYv5bAVgZwRC6eYdlgkKcYC_kduujKE'
PDC_EMAIL_SUBSCRIPTION_GOOGLE_SHEET_ID = '1gNJkqOY_HeBODt1xz3mLVg4cAltmL2N4mruhEDbTA1A'

PDC_EMAIL_FROM_ADDRESS = 'aepton@kuow.org'
PDC_SCRAPER_CONTACT_HEADERS = {
    'requester-name': 'KUOW campaign finance',
    'requester-contact': 'aepton@kuow.org'
}

SOS_DATA_DIR = os.path.join(DATA_DIR, 'sos')
SOS_CORPORATION_DATA_PATH = os.path.join(SOS_DATA_DIR, 'corporations_wa_sos_4-21-2016.txt')
SOS_GOVERNING_PERSONS_DATA_PATH = os.path.join(SOS_DATA_DIR, 'governing_persons_wa_sos_4-21-2016.txt')

PDC_DATA_DIR = os.path.join(DATA_DIR, 'pdc')
PDC_COMMITTEES_PATH = os.path.join(PDC_DATA_DIR, 'dbo_c1_4_26_2016.csv')
PDC_CONTRIBUTIONS_PATH = os.path.join(PDC_DATA_DIR, 'dbo_rcpt_4_26_2016.csv')

TAMU_GEOCODER_KEY = os.environ.get('TAMU_GEOCODER_KEY', '')
TAMU_GEOCODER_URL = 'http://geoservices.tamu.edu/Services/Geocode/WebService/GeocoderWebServiceHttpNonParsed_V04_01.aspx?'

GOOGLE_GEOCODER_KEY = os.environ.get('GOOGLE_GEOCODER_KEY', '')
SKIP_DB_GEOCODING = True

PROPUBLICA_API_KEY = os.environ.get('PROPUBLICA_API_KEY', '')
FEC_API_KEY = os.environ.get('FEC_API_KEY', '')
NUM_FEC_RETRIES = 10

DEDUPE_SETTINGS = os.path.join(DATA_DIR, 'donors.dedupe_settings')

SOUND_TRANSIT_DISTRICT_ID = 80753

# Given in kilometers, expressing distance we use to say 2 people/entities are "nearby"
DEFAULT_PROXIMITY_DISTANCE = 0.01

# S3 settings
S3_BUCKET = 'data.kuow.org'
S3_GUIDE_BUCKET = 'influence.kuow.org'
S3_HOST = 's3-us-west-2.amazonaws.com'
EC2_URL = 'http://52.39.110.212'
S3_BUCKET_UNALIASED_PATH = 'http://influence.kuow.org.s3-website-us-west-2.amazonaws.com/'

# WA election results
WA_ELECTION_RESULT_URLS = [
    (
        2015,
        'statewide',
        'http://results.vote.wa.gov/results/20151103/export/20151103_AllState.csv'
    ),
    (
        2014,
        'statewide',
        'http://results.vote.wa.gov/results/20141104/export/20141104_AllState.csv'
    ),
    (
        2013,
        'statewide',
        'http://results.vote.wa.gov/results/20131105/export/20131105_AllState_20131210_0314.csv'
    ),
    (
        2012,
        'statewide',
        'http://results.vote.wa.gov/results/20121106/export/20121106_AllState_20121205_1451.csv'
    ),
    (
        2011,
        'statewide',
        'http://results.vote.wa.gov/results/20111108/export/20111108_AllState.csv'
    ),
    (
        2010,
        'statewide',
        'http://results.vote.wa.gov/results/20101102/export/20101102_AllState.csv'
    ),
    (
        2009,
        'statewide',
        'http://results.vote.wa.gov/results/20091103/export/20091103_AllState.csv'
    ),
    (
        2008,
        'statewide',
        'http://results.vote.wa.gov/results/20081104/export/20081104_AllState.csv'
    ),
    (
        2007,
        'statewide',
        'http://results.vote.wa.gov/results/20071106/export/20071106_AllState.csv'
    ),
    (
        2015,
        'counties',
        'http://results.vote.wa.gov/results/20151103/export/20151103_AllCounties.csv'
    ),
    (
        2014,
        'counties',
        'http://results.vote.wa.gov/results/20141104/export/20141104_AllCounties.csv'
    ),
    (
        2013,
        'counties',
        'http://results.vote.wa.gov/results/20131105/export/20131105_AllCounties_20131210_0314.csv'
    ),
    (
        2012,
        'counties',
        'http://results.vote.wa.gov/results/20121106/export/20121106_AllCounties_20121205_1451.csv'
    ),
    (
        2011,
        'king',
        'http://results.vote.wa.gov/results/20111108/export/20111108_King.csv'
    ),
    (
        2011,
        'pierce',
        'http://results.vote.wa.gov/results/20111108/export/20111108_Pierce.csv'
    ),
    (
        2011,
        'snohomish',
        'http://results.vote.wa.gov/results/20111108/export/20111108_Snohomish.csv'
    ),
    (
        2010,
        'king',
        'http://results.vote.wa.gov/results/20101102/export/20101102_King.csv'
    ),
    (
        2010,
        'pierce',
        'http://results.vote.wa.gov/results/20101102/export/20101102_Pierce.csv'
    ),
    (
        2010,
        'snohomish',
        'http://results.vote.wa.gov/results/20101102/export/20101102_Snohomish.csv'
    ),
    (
        2009,
        'king',
        'http://results.vote.wa.gov/results/20091103/export/20091103_King.csv'
    ),
    (
        2009,
        'pierce',
        'http://results.vote.wa.gov/results/20091103/export/20091103_Pierce.csv'
    ),
    (
        2009,
        'snohomish',
        'http://results.vote.wa.gov/results/20091103/export/20091103_Snohomish.csv'
    ),
    (
        2008,
        'king',
        'http://results.vote.wa.gov/results/20081104/export/20081104_King.csv'
    ),
    (
        2008,
        'pierce',
        'http://results.vote.wa.gov/results/20081104/export/20081104_Pierce.csv'
    ),
    (
        2008,
        'snohomish',
        'http://results.vote.wa.gov/results/20081104/export/20081104_Snohomish.csv'
    ),
    (
        2007,
        'king',
        'http://results.vote.wa.gov/results/20071106/export/20071106_King.csv'
    ),
    (
        2007,
        'pierce',
        'http://results.vote.wa.gov/results/20071106/export/20071106_Pierce.csv'
    ),
    (
        2007,
        'snohomish',
        'http://results.vote.wa.gov/results/20071106/export/20071106_Snohomish.csv'
    )
]

ST_BALLOT_MEASURE_COMMITTEES = ['MASSTN 101', 'CITIBT 111']
ST_2_2007_ELECTION_DAY = datetime.strptime('2007-11-6', '%Y-%m-%d')
ST_2_2008_ELECTION_DAY = datetime.strptime('2008-11-4', '%Y-%m-%d')

AWS_REGION = 'us-west-2'
EMAIL_FROM_ADDRESS = 'aepton@kuow.org'
MAINTAINER_EMAIL_ADDRESS = 'abraham.epton@gmail.com'

RECENT_FILING_AMOUNT_CUTOFF = 2000
RECENT_FILING_REPORT_EMAIL_ADDRESSES = ['jryan@kuow.org', 'gaegerter@kuow.org', 'ajenkins@kuow.org', 'abraham.epton@gmail.com']

MIN_FILING_YEAR = 2000
MAX_FILING_YEAR = 2028
